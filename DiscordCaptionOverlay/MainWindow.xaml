<Window x:Class="DiscordCaptionOverlay.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:shell="http://schemas.microsoft.com/winfx/2006/xaml/presentation/shell"
        x:Name="RootWin"
        AllowsTransparency="True"
        WindowStyle="None"
        Background="Transparent"
        Topmost="True"
        ShowInTaskbar="False"
        ResizeMode="CanResize"
        Loaded="Window_Loaded"
        SizeChanged="Window_SizeChanged"
        MouseLeftButtonDown="Window_MouseLeftButtonDown"
        Width="820"
        Height="520"
        MinWidth="520"
        MinHeight="340">

 

  <!-- ===== Apple-glass style resources + compact/responsive styles ===== -->
  <Window.Resources>
    <!-- Core palette (tints) -->
    <Color x:Key="Color1">#191919</Color>
    <Color x:Key="Color2">#2B2B2B</Color>
    <Color x:Key="Color3">#FFFFFF</Color>

    <!-- Shell glass: darker, vertical gradient -->
    <LinearGradientBrush x:Key="ChromeBrush" StartPoint="0,0" EndPoint="0,1">
      <GradientStop Offset="0.00" Color="#B0202020"/>
      <GradientStop Offset="1.00" Color="#B01E1E1E"/>
    </LinearGradientBrush>

    <!-- Tileable "noise" to simulate frosted glass texture -->
    <DrawingBrush x:Key="NoiseBrush" Viewport="0,0,16,16" ViewportUnits="Absolute" TileMode="Tile" Opacity="0.06">
      <DrawingBrush.Drawing>
        <DrawingGroup>
          <GeometryDrawing Brush="#FFFFFFFF">
            <GeometryDrawing.Geometry>
              <GeometryGroup>
                <EllipseGeometry Center="2,2"   RadiusX="0.6" RadiusY="0.6"/>
                <EllipseGeometry Center="6,9"   RadiusX="0.5" RadiusY="0.5"/>
                <EllipseGeometry Center="10,4"  RadiusX="0.5" RadiusY="0.5"/>
                <EllipseGeometry Center="13,12" RadiusX="0.6" RadiusY="0.6"/>
                <EllipseGeometry Center="4,13"  RadiusX="0.5" RadiusY="0.5"/>
              </GeometryGroup>
            </GeometryDrawing.Geometry>
          </GeometryDrawing>
        </DrawingGroup>
      </DrawingBrush.Drawing>
    </DrawingBrush>

    <!-- Lane cards: frosted base + gloss -->
    <SolidColorBrush x:Key="CardBrush" Color="#40FFFFFF"/>
    <SolidColorBrush x:Key="InkBrush"  Color="#FFFFFFFF"/>
    <SolidColorBrush x:Key="DimInk"    Color="#CCFFFFFF"/>

    <LinearGradientBrush x:Key="LaneGradient" StartPoint="0,0" EndPoint="0,1">
      <GradientStop Offset="0.0" Color="#20FFFFFF"/>
      <GradientStop Offset="1.0" Color="#0DFFFFFF"/>
    </LinearGradientBrush>

    <DropShadowEffect x:Key="SoftShadow" BlurRadius="18" ShadowDepth="0" Opacity="0.35" Color="Black"/>

    <!-- ===== Responsive/compact styles (bind to window height) ===== -->
    <Style x:Key="CompactLaneBorder" TargetType="Border">
      <Setter Property="CornerRadius" Value="14"/>
      <Setter Property="Margin" Value="6"/>
      <Setter Property="HorizontalAlignment" Value="Stretch"/>
      <Style.Triggers>
        <DataTrigger Binding="{Binding ElementName=RootWin, Path=ActualHeight}" Value="380">
          <Setter Property="CornerRadius" Value="10"/>
          <Setter Property="Margin" Value="4"/>
        </DataTrigger>
      </Style.Triggers>
    </Style>

    <Style x:Key="CompactUsername" TargetType="TextBlock">
      <Setter Property="FontSize" Value="12"/>
      <Setter Property="Opacity" Value="0.8"/>
      <Style.Triggers>
        <DataTrigger Binding="{Binding ElementName=RootWin, Path=ActualHeight}" Value="320">
          <Setter Property="Visibility" Value="Collapsed"/>
        </DataTrigger>
      </Style.Triggers>
    </Style>

    <Style x:Key="CompactCaption" TargetType="TextBlock">
      <Setter Property="FontSize" Value="18"/>
      <Setter Property="TextWrapping" Value="NoWrap"/>
      <Setter Property="TextTrimming" Value="CharacterEllipsis"/>
      <Style.Triggers>
        <DataTrigger Binding="{Binding ElementName=RootWin, Path=ActualHeight}" Value="380">
          <Setter Property="FontSize" Value="16"/>
        </DataTrigger>
        <DataTrigger Binding="{Binding ElementName=RootWin, Path=ActualHeight}" Value="320">
          <Setter Property="FontSize" Value="14"/>
        </DataTrigger>
      </Style.Triggers>
    </Style>

    <Style x:Key="CompactAvatarGrid" TargetType="Grid">
      <Setter Property="Width"  Value="28"/>
      <Setter Property="Height" Value="28"/>
      <Style.Triggers>
        <DataTrigger Binding="{Binding ElementName=RootWin, Path=ActualHeight}" Value="380">
          <Setter Property="Width"  Value="24"/>
          <Setter Property="Height" Value="24"/>
        </DataTrigger>
        <DataTrigger Binding="{Binding ElementName=RootWin, Path=ActualHeight}" Value="320">
          <Setter Property="Width"  Value="20"/>
          <Setter Property="Height" Value="20"/>
        </DataTrigger>
      </Style.Triggers>
    </Style>

    <!-- ===== Lane (speaker) template ===== -->
    <DataTemplate x:Key="LaneTemplate">
      <Border Style="{StaticResource CompactLaneBorder}"
              Effect="{StaticResource SoftShadow}"
              BorderBrush="#20FFFFFF" BorderThickness="1">
        <Border.Background>
          <VisualBrush>
            <VisualBrush.Visual>
              <Grid>
                <Border CornerRadius="14" Background="{StaticResource CardBrush}"/>
                <Border CornerRadius="14" Background="{StaticResource LaneGradient}"/>
              </Grid>
            </VisualBrush.Visual>
          </VisualBrush>
        </Border.Background>

        <Grid Margin="10,8">
          <Grid.ColumnDefinitions>
            <ColumnDefinition Width="Auto"/>
            <ColumnDefinition Width="8"/>
            <ColumnDefinition Width="*"/>
          </Grid.ColumnDefinitions>

          <!-- Left color puck / avatar (scales with content) -->
          <Grid Style="{StaticResource CompactAvatarGrid}">
            <Ellipse Fill="{Binding ColorBrush}"/>
            <Ellipse Margin="3">
              <Ellipse.Fill>
                <RadialGradientBrush>
                  <GradientStop Offset="0" Color="#40FFFFFF"/>
                  <GradientStop Offset="1" Color="#00FFFFFF"/>
                </RadialGradientBrush>
              </Ellipse.Fill>
            </Ellipse>
            <TextBlock Text="{Binding Initials}"
                       Foreground="White"
                       FontSize="12"
                       FontWeight="Bold"
                       HorizontalAlignment="Center"
                       VerticalAlignment="Center"
                       Opacity="0.85"/>
          </Grid>

          <Border Grid.Column="1"/>

          <!-- Right text column fills remaining width -->
          <StackPanel Grid.Column="2" Orientation="Vertical" VerticalAlignment="Center">
            <TextBlock Text="{Binding Username}"
                       Style="{StaticResource CompactUsername}"
                       Foreground="{StaticResource DimInk}"
                       TextOptions.TextFormattingMode="Display"
                       TextOptions.TextHintingMode="Fixed" />
            <TextBlock Text="{Binding Text}"
                       Style="{StaticResource CompactCaption}"
                       FontWeight="SemiBold"
                       Foreground="{StaticResource InkBrush}"
                       TextOptions.TextFormattingMode="Display"
                       TextOptions.TextHintingMode="Fixed"
                       Opacity="{Binding TextOpacity}"/>
          </StackPanel>
        </Grid>
      </Border>
    </DataTemplate>
  </Window.Resources>

  <!-- ===== Frameless window shell (Apple-glass style) ===== -->
  <Grid Margin="12">
    <Border CornerRadius="18"
            Background="{StaticResource ChromeBrush}"
            BorderBrush="#30FFFFFF" BorderThickness="1"
            SnapsToDevicePixels="True"
            ClipToBounds="True">
      <Grid>
        <Grid.RowDefinitions>
          <RowDefinition Height="28"/>
          <RowDefinition Height="*"/>
        </Grid.RowDefinitions>

        <!-- Glass noise overlay spanning the shell -->
        <Rectangle Grid.RowSpan="2"
                   Fill="White"
                   OpacityMask="{StaticResource NoiseBrush}"
                   Opacity="0.06"/>

        <!-- Title bar (minimal) -->
        <Grid x:Name="TitleBar"
              Grid.Row="0"
              Margin="4,4,4,0"
              Height="28"
              MouseLeftButtonDown="TitleBar_MouseLeftButtonDown">
          <StackPanel Orientation="Horizontal" HorizontalAlignment="Right" VerticalAlignment="Center" Margin="0,0,8,0">
            <Button x:Name="MinimizeButton" Content="–" Width="24" Height="20"
                    Click="MinimizeButton_Click"
                    Padding="0" FontSize="14"
                    Background="#10FFFFFF" Foreground="#F0FFFFFF"
                    BorderBrush="#20FFFFFF" BorderThickness="1"
                    Cursor="Hand" Margin="0,0,6,0"/>
            <Button x:Name="CloseButton" Content="×" Width="24" Height="20"
                    Click="CloseButton_Click"
                    Padding="0" FontSize="14"
                    Background="#10FFFFFF" Foreground="#F0FFFFFF"
                    BorderBrush="#20FFFFFF" BorderThickness="1"
                    Cursor="Hand"/>
          </StackPanel>
        </Grid>

        <!-- ===== Scaled content region ===== -->
        <!-- Everything inside ScaleRoot (icons, text, spacing) scales uniformly.
             RootScale.ScaleX/ScaleY are updated in code-behind on SizeChanged. -->
        <Grid Grid.Row="1"
              x:Name="ScaleRoot"
              HorizontalAlignment="Stretch"
              VerticalAlignment="Stretch">
          <Grid.LayoutTransform>
            <ScaleTransform x:Name="RootScale" ScaleX="1" ScaleY="1"/>
          </Grid.LayoutTransform>

          <ItemsControl ItemsSource="{Binding}"
                        ItemTemplate="{StaticResource LaneTemplate}"
                        HorizontalAlignment="Stretch"
                        Padding="16">
            <!-- Make each generated ContentPresenter stretch horizontally -->
            <ItemsControl.ItemContainerStyle>
              <Style TargetType="ContentPresenter">
                <Setter Property="HorizontalAlignment" Value="Stretch"/>
              </Style>
            </ItemsControl.ItemContainerStyle>
            <ItemsControl.ItemsPanel>
              <ItemsPanelTemplate>
                <UniformGrid Rows="5" Columns="1"/>
              </ItemsPanelTemplate>
            </ItemsControl.ItemsPanel>
          </ItemsControl>
        </Grid>

      </Grid>
    </Border>
  </Grid>
</Window>
